version: '2.1'

networks:
  kong-net:

services:
  kong-migrations:
    image: kong:2.4.1-alpine-logger-0.1.3
    command: kong migrations bootstrap
    depends_on:
      db:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: db
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PG_USER: ${KONG_PG_USER:-kong}
    networks:
      - kong-net
    restart: on-failure

  kong:
    image: kong:2.4.1-alpine-logger-0.1.3
    user: "${KONG_USER:-kong}"
    depends_on:
      db:
        condition: service_healthy
    environment:
      KONG_LOG_LEVEL: error
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: '0.0.0.0:8001'
      KONG_ADMIN_GUI_URL: http://localhost:8002
      KONG_CASSANDRA_CONTACT_POINTS: db
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: db
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
    networks:
      - kong-net
    ports:
      - "8000:8000/tcp"
      - "8001:8001/tcp"
      - "8002:8002/tcp"
      - "8443:8443/tcp"
      - "8444:8444/tcp"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure

  db:
    image: postgres:9.5
    environment:
      POSTGRES_DB: ${KONG_PG_DATABASE:-kong}
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      POSTGRES_USER: ${KONG_PG_USER:-kong}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${KONG_PG_USER:-kong}"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true
    networks:
      - kong-net
    volumes:
      - ./kong-data:/var/lib/postgresql/data

  redis:
    image: redis
    ports:
      - '6379:6379'

  konga:
    image: pantsel/konga
    depends_on:
      kong:
        condition: service_healthy
    environment:
      TOKEN_SECRET: a978ef99-d776-4b63-b234-e4aecfe8d384
      NODE_ENV: production
      NO_AUTH: "true"
      KONGA_SEED_KONG_NODE_DATA_SOURCE_FILE: /etc/kong/konga.seed
    volumes:
      - ./konga.seed:/etc/kong/konga.seed
    networks:
      - kong-net
    ports:
      - "1337:1337/tcp"